package net.bagot.pgf;

import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.net.Uri;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ListView;

import com.google.android.gms.location.Geofence;

import net.bagot.pgf.geofence.GeofenceTransitionService;
import net.bagot.pgf.geofence.GeofencesManager;
import net.bagot.pgf.poi.POIManager;
import net.bagot.pgf.util.GeofenceHelper;

import java.util.List;
import java.util.Set;

public class MainActivity extends Activity {
    private static final String TAG = "MainActivity";
    private static final int READ_REQUEST_CODE = 1337;

    private ArrayAdapter<String> listAdapter;
    private boolean isTracking = false;

    private GeofencesManager geofences;
    private POIManager poi;

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // View callback

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        geofences = new GeofencesManager(this);
        poi = new POIManager(this);
        initView();

        // register to receive transitions intents
        IntentFilter intentFilter = new IntentFilter();
        intentFilter.addAction(GeofenceTransitionService.TRANSITION_EVENT);
        registerReceiver(transitionReceiver, intentFilter);
    }

    private void initView() {
        final Button track = (Button) findViewById(R.id.start_stop_button);
        track.setText("START TRACKING");
        track.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                isTracking = !isTracking;
                Log.i(TAG, "track: Click : isTracking :" + isTracking);
                if (isTracking) {
                    track.setText("STOP TRACKING");
                    Set<String> groupNames = poi.getGroupNames();
                    for (String group : groupNames) {
                        List<Geofence> poiList = poi.getPOIForGroupName(group);
                        geofences.register(poiList);
                    }
                } else {
                    track.setText("START TRACKING");
                    geofences.unregister();
                }
            }
        });

        final Button load = (Button) findViewById(R.id.loadButton);
        load.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                Log.i(TAG, "load: Click");
                loadFile();
            }
        });

        // Get ListView object from xml
        final ListView listView = (ListView) findViewById(R.id.logsList);
        listAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, android.R.id.text1, new String[]{});

        // Assign adapter to ListView
        listView.setAdapter(listAdapter);
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        geofences.dispose();
    } //--------------------------------------------------------------------------------------------

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // Transition events receiver

    // receives the transitions events generated by the geofences
    private final BroadcastReceiver transitionReceiver = new BroadcastReceiver() {
        @Override
        public void onReceive(Context context, Intent intent) {
            int transitionCode = intent.getIntExtra("transitionCode", -1);
            Geofence[] geofences = (Geofence[]) intent.getSerializableExtra("geofences");

            Log.i(TAG, "transitionReceiver: event");

            if (transitionCode != -1 && geofences != null) {
                for (Geofence geofence : geofences) {
                    listAdapter.add(geofence.getRequestId() + ":" + GeofenceHelper.getTransitionString(context, transitionCode));
                    listAdapter.notifyDataSetChanged();
                }
            }
        }
    }; //-------------------------------------------------------------------------------------------

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // Load file

    public void loadFile() {
        Intent intent = new Intent(Intent.ACTION_OPEN_DOCUMENT);
        intent.addCategory(Intent.CATEGORY_OPENABLE);
        intent.setType("*/*");
        startActivityForResult(intent, READ_REQUEST_CODE);
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent resultData) {
        if (requestCode == READ_REQUEST_CODE && resultCode == Activity.RESULT_OK) {
            Uri uri = null;
            if (resultData != null) {
                uri = resultData.getData();
                poi.parse(uri);
            }
        }
    } //--------------------------------------------------------------------------------------------
}
